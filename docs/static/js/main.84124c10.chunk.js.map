{"version":3,"sources":["components/cities-list/CitiesList.js","components/filter/FilterCity.js","components/user-city-list/UserCityList.js","App.js","index.js"],"names":["CitiesList","props","data","query","addCityToUserList","removeCityFromUserList","cityImage","pageSize","setPageSize","handleCheckboxChange","event","citySelectedId","currentTarget","parentNode","id","checked","className","slice","filter","city","name","toLowerCase","includes","chineseName","map","key","onChange","type","src","alt","as","inView","FilterCity","setQuery","htmlFor","value","placeholder","UserCityList","userList","handleClickDelete","document","querySelector","cityToRemoveId","replace","index","onClick","aria-label","App","useState","dataCities","cities","setUserList","cityId","unSelectedCityPosition","findIndex","splice","checkboxNodeList","querySelectorAll","Array","from","find","checkbox","allCheckbox","checkboxArray","forEach","citiesToSelect","length","selectedCity","push","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.84124c10.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./CitiesList.scss\";\nimport { InView } from \"react-intersection-observer\";\n\nconst CitiesList = props => {\n  const {\n    data,\n    query,\n    addCityToUserList,\n    removeCityFromUserList,\n    cityImage,\n    pageSize,\n    setPageSize\n  } = props;\n\n  const handleCheckboxChange = event => {\n    const citySelectedId = event.currentTarget.parentNode.parentNode.id;\n    if (event.currentTarget.checked) {\n      addCityToUserList(citySelectedId);\n    } else {\n      removeCityFromUserList(citySelectedId);\n    }\n  };\n\n  return (\n    <div className=\"main__cities-list\">\n      <ul className=\"cities-list\">\n        {data\n          .slice(0, pageSize)\n          .filter(\n            city =>\n              city.name.toLowerCase().includes(query.toLowerCase()) ||\n              city.chineseName.toLowerCase().includes(query.toLowerCase())\n          )\n          .map(city => {\n            return (\n              <li id={city.id} key={city.id} className=\"cities-list__city\">\n                <label className=\"checkbox-container\">\n                  <input\n                    onChange={handleCheckboxChange}\n                    type=\"checkbox\"\n                    className=\"city__checkbox\"\n                  />\n                  <span className=\"checkmark\"></span>\n                </label>\n                <img src={cityImage} alt={city.name} className=\"city__img\" />\n                <div className=\"city__names-wrapper\">\n                  <p className=\"city__name\">{city.name}</p>\n                  <p className=\"city__chinese-name\">{city.chineseName}</p>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n\n      <InView\n        as=\"div\"\n        onChange={inView => {\n          if (inView) {\n            setPageSize(pageSize + 20);\n          }\n        }}\n      ></InView>\n    </div>\n  );\n};\n\nCitiesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n  addCityToUserList: PropTypes.func.isRequired,\n  removeCityFromUserList: PropTypes.func.isRequired,\n  cityImage: PropTypes.string.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  setPageSize: PropTypes.func.isRequired\n};\n\nexport default CitiesList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./FilterCity.scss\";\n\nconst FilterCity = props => {\n  const { setQuery } = props;\n  return (\n    <div className=\"main__filter-wrapper\">\n      <label htmlFor=\"city-filter\"></label>\n      <i className=\"fa fa-search\"></i>\n      <input\n        onChange={event => setQuery(event.currentTarget.value)}\n        id=\"city-filter\"\n        type=\"text\"\n        className=\"main__filter\"\n        placeholder=\"Search by name\"\n      />\n    </div>\n  );\n};\n\nFilterCity.propTypes = {\n  setQuery: PropTypes.func.isRequired\n};\n\nexport default FilterCity;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./UserCityList.scss\";\n\nconst UserCityList = props => {\n  const { userList, cityImage, removeCityFromUserList } = props;\n  const handleClickDelete = event => {\n    document.querySelector(\".city__checkbox\").checked = false;\n    const citySelectedId = event.currentTarget.parentNode.id;\n    const cityToRemoveId = citySelectedId.replace(\"user-\", \"\");\n    removeCityFromUserList(cityToRemoveId);\n  };\n\n  return (\n    <div className=\"main__user-city-list\">\n      <ul className=\"user-city-list\">\n        {userList.map((city, index) => {\n          return (\n            <li\n              id={`user-${city.id}`}\n              key={index}\n              className=\"user-city-list__city\"\n            >\n              <div className=\"user-city__left-side-wrapper\">\n                <img\n                  src={cityImage}\n                  alt={city.name}\n                  className=\"city__img user-city__img \"\n                />\n                <div className=\"user-city__text-wrapper\">\n                  <p className=\"user-city__name\">{city.name}</p>\n                  <p className=\"user-city__chinese-name\">{city.chineseName}</p>\n                </div>\n              </div>\n              <button\n                onClick={handleClickDelete}\n                className=\"city__delete-button\"\n              >\n                <i className=\"fas fa-times\" aria-label=\"Delete button\"></i>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nUserCityList.propTypes = {\n  userList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  cityImage: PropTypes.string.isRequired,\n  removeCityFromUserList: PropTypes.func.isRequired\n};\n\nexport default UserCityList;\n","import React, { useState } from \"react\";\nimport dataCities from \"./services/cities-china.json\";\nimport \"./App.scss\";\nimport CitiesList from \"./components/cities-list/CitiesList.js\";\nimport FilterCity from \"./components/filter/FilterCity.js\";\nimport UserCityList from \"./components/user-city-list/UserCityList.js\";\n\nconst cityImage = \"https://cdn140.picsart.com/299508582161201.png?r1024x1024\";\n\nfunction App() {\n  const [data] = useState(dataCities.cities);\n  const [query, setQuery] = useState(\"\");\n  let [userList, setUserList] = useState([]);\n  let [pageSize, setPageSize] = useState(20);\n\n  const addCityToUserList = cityId => {\n    const selectedCity = data.find(city => city.id === cityId);\n    if (!userList.includes(selectedCity)) {\n      userList.push(selectedCity);\n      setUserList([...userList]);\n    }\n  };\n  const removeCityFromUserList = cityId => {\n    document.querySelector(\".main__all-checkbox\").checked = false;\n    const unSelectedCityPosition = userList.findIndex(\n      city => city.id === cityId\n    );\n    userList.splice(unSelectedCityPosition, 1);\n    const checkboxNodeList = document.querySelectorAll(\".city__checkbox\");\n    const willUnselect = Array.from(checkboxNodeList).find(\n      checkbox => checkbox.parentNode.parentNode.id === cityId\n    );\n    willUnselect.checked = false;\n    setUserList([...userList]);\n  };\n\n  const handleClickAll = event => {\n    const allCheckbox = event.currentTarget;\n    const checkboxArray = document.querySelectorAll(\".city__checkbox\");\n    if (allCheckbox.checked) {\n      checkboxArray.forEach(checkbox => {\n        if (!checkbox.checked) {\n          checkbox.checked = true;\n        }\n      });\n      const citiesToSelect = data.filter(\n        city =>\n          city.name.toLowerCase().includes(query.toLowerCase()) ||\n          city.chineseName.toLowerCase().includes(query.toLowerCase())\n      );\n      setUserList(citiesToSelect);\n    } else {\n      checkboxArray.forEach(checkbox => {\n        if (checkbox.checked) {\n          checkbox.checked = false;\n        }\n      });\n      setUserList([]);\n    }\n  };\n\n  const handleClearButton = () => {\n    setUserList([]);\n    const checkboxArray = document.querySelectorAll(\".city__checkbox\");\n    checkboxArray.forEach(checkbox => {\n      if (checkbox.checked) {\n        checkbox.checked = false;\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1 className=\"header__title\">Cities of China</h1>\n      </header>\n      <main className=\"app__main\">\n        <section className=\"main__filter-list-section\">\n          <FilterCity setQuery={setQuery} />\n          <div className=\"main__select-all-wrapper\">\n            <label className=\"checkbox-container\">\n              <input\n                onClick={handleClickAll}\n                type=\"checkbox\"\n                className=\"city__checkbox\"\n              />\n              <span className=\"main__all-checkbox checkmark\"></span>\n            </label>\n            <p className=\"main__all-city-text\">{data.length} items</p>\n          </div>\n          <CitiesList\n            data={data}\n            query={query}\n            addCityToUserList={addCityToUserList}\n            removeCityFromUserList={removeCityFromUserList}\n            cityImage={cityImage}\n            pageSize={pageSize}\n            setPageSize={setPageSize}\n          />\n        </section>\n        <section className=\"main__user-list-section\">\n          <div className=\"user-list__functionality-wrapper\">\n            <p className=\"user-list__number-items\">{userList.length} items</p>\n            <button\n              className=\"user-list__clear-btn\"\n              onClick={handleClearButton}\n            >\n              CLEAR\n            </button>\n          </div>\n          <UserCityList\n            userList={userList}\n            cityImage={cityImage}\n            removeCityFromUserList={removeCityFromUserList}\n          />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}